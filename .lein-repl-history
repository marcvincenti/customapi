(:id {:id 9})
(:id {:is 9})
({:is 9} :id)
(nil :id)
(:id nil)
(map + {:a 1 :b 2})
(map inc {:a 1 :b 2})
(map #(+ (second %)) {:a 1 :b 2})
(map #(inc (second %)) {:a 1 :b 2})
(map #((first %)(inc (second %))) {:a 1 :b 2})
(map #({(first %)(inc (second %))}) {:a 1 :b 2})
(def var {:a 1 :b 2})
var
(reduce (fn [new-map [key val]]
          (assoc new-map key (inc val)))
        {}
        {:max 30 :min 10})
(lower-case 'Vins@qf.tr')
(clojure.string/lower-case 'VinC@enT.ima.rC')
(clojure.string/lower-case 'VinCenT.ima.rC')
(def mail 'VinCenTi@MaRC.CoM')
(def mail 'VinCenTi\@MaRC.CoM')
(def mail 'VinCenTi\\@MaRC.CoM')
